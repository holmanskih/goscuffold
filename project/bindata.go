// Code generated by go-bindata.
// sources:
// templates/cmd/db_migrate.go.tpl
// templates/cmd/main.go.tpl
// templates/cmd/serve.go.tpl
// templates/config/cfg.go.tpl
// templates/config/workers.go.tpl
// templates/dbschema/main.go.tpl
// templates/info/main.go.tpl
// templates/initialization/init-functions.go.tpl
// templates/initialization/main.go.tpl
// templates/main.go.tpl
// templates/models/query.go.tpl
// templates/version.go.tpl
// templates/workers/api/main.go.tpl
// templates/workers/chief.go.tpl
// templates/workers/foobar/main.go.tpl
// DO NOT EDIT!

package project

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdDb_migrateGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xdf\x6b\xdb\x30\x10\xc7\x9f\xad\xbf\xe2\x66\x28\xd8\x23\x73\xd8\x6b\xa0\x0f\x6d\xd2\x8d\xc1\xda\x87\x96\xb2\x87\x31\x86\x2c\x9d\x5c\xad\xfa\x61\xce\x72\xd3\x12\xfc\xbf\x0f\x5b\x76\xe2\x64\x83\xbe\x6c\x30\xf6\x22\x2c\xdd\xdd\xf7\xee\x3e\x97\x5c\xcd\xc5\x23\xaf\x10\x84\x95\x8c\x69\x5b\x7b\x0a\x90\xb1\x24\x55\x36\xa4\x8c\x25\x69\xa5\xc3\x43\x5b\x16\xc2\xdb\xa5\xe1\x4e\x20\xbd\x7b\xd4\x61\xc9\xc9\x7a\x7a\x59\xca\x32\x7d\xcd\xc5\xf8\xea\xc4\xa7\x25\xc5\x9f\x70\x29\x8c\x1e\x12\xec\x76\x45\x4d\xfe\x07\x8a\xf0\xdd\x71\x8b\x5d\xb7\x14\xde\x29\x3d\x44\xfd\x6a\x93\x65\x23\x1e\xd0\xf2\x94\xe5\x8c\xa9\xd6\x09\xb0\xba\x22\x1e\x70\x6d\x65\x96\x83\x30\xba\x58\x7b\x6b\xb9\x93\xb0\x63\xc9\x13\xa7\xbd\x7d\x7c\x3d\x9f\xfb\xec\x58\x92\xdc\x70\x8b\x2b\x80\x74\xf4\x4b\x17\x2c\x49\xee\x1b\x5e\xe1\x0a\x52\x5e\xd7\xe6\x05\x64\x39\x8a\x68\xef\xd2\x05\x63\x49\x72\xd7\x96\x22\x2a\x34\x2b\xf8\xfa\xed\x44\x31\x19\x8e\xbd\x70\x5b\x0f\x9a\xa7\xaa\x6d\x7d\x50\x05\xa9\x09\xc5\xa8\xdf\xbb\x5e\x0c\x97\x15\xf4\x1d\x66\x02\xde\xc6\x0c\x2e\xe0\x73\xc8\x01\x89\x3c\x41\x4c\x92\x08\x55\xc1\xea\x1c\x22\xb3\xe2\x16\xb9\x5c\x0f\x9f\x99\x28\x3e\x1a\x5f\x72\x73\x17\x48\xbb\x2a\xfb\x60\x78\x15\x2d\x79\xce\x62\x28\x12\xf5\xa1\x63\xe3\x9b\xcb\x4c\x96\xc5\x75\xbc\xdc\xd7\x0b\x10\xaa\xca\xa3\xa3\x56\x7d\x4e\x78\x73\x0e\x4e\x9b\x29\x71\x42\x18\x5a\x72\xbd\x25\x3e\x74\x6c\xfe\xec\xb4\x19\xee\xdd\xd0\x50\x3c\x8f\xb9\x48\xbf\x75\x27\x64\x24\xf9\x1a\xfa\x29\x09\x83\xdc\x81\xe4\x81\x97\xbc\x41\x18\x67\xfe\x6f\xb0\xd9\xf8\xad\xfb\xfb\x74\x08\xa5\x3f\xa1\x43\xd8\x60\xf8\xcf\xa0\x1c\x84\xff\xe4\x0f\xf1\x35\xd6\xfd\xd1\xb1\xc9\xe1\x78\x43\xb0\xee\x78\xb1\xf4\xe5\x4c\xff\x4e\x98\x35\xac\x69\xa8\x6c\x02\xb9\x56\x55\x1e\xb1\x5f\x3d\xeb\x70\x35\x11\x17\xbe\x75\x61\x01\x23\xb9\x69\x7b\x4d\x22\x99\x50\x55\xb1\xb9\xec\x27\xe5\xee\x6f\x3f\x2f\x0e\x7b\x20\x67\xbf\x69\xd6\xf8\xaa\xd8\xa0\xe2\xad\x09\xc5\x17\x1d\x1e\x86\x2c\x19\x12\xe5\x45\xfc\x4c\xaf\xa7\x8d\xd2\x80\xe2\xda\xa0\x4c\x7b\x72\x63\x9f\x7d\x71\x37\xb8\xdd\xd7\x97\x29\x1b\x8a\xbb\x9a\xb4\x0b\x2a\x4b\x0f\xcb\xe8\x6c\x1f\x3c\x2f\x68\x01\xef\x73\x36\xb0\x9d\x97\xf1\xc9\x29\x7f\xac\x73\x51\xd7\x46\xa3\x84\x33\xd9\x0b\xcd\x16\x27\x8c\x2c\x0e\x92\x39\x9b\xcf\xa8\x63\x3f\x03\x00\x00\xff\xff\x31\x1c\x55\xda\x8c\x06\x00\x00"

func cmdDb_migrateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdDb_migrateGoTpl,
		"cmd/db_migrate.go.tpl",
	)
}

func cmdDb_migrateGoTpl() (*asset, error) {
	bytes, err := cmdDb_migrateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/db_migrate.go.tpl", size: 1676, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x31\x4b\x04\x31\x10\x85\xeb\xcc\xaf\x18\x52\xdd\xe1\x91\xed\x0f\xac\x16\xb4\xb3\x11\x6c\xc4\x62\x9c\x9d\x8d\xc1\x4c\x72\x64\x93\x03\x39\xf6\xbf\x4b\xce\x53\x4f\xec\xde\xfb\x5e\xf1\xbd\x03\xf1\x3b\x79\x41\xd6\x09\x20\xe8\x21\x97\x8a\xd6\x87\xfa\xd6\x5e\x1d\x67\x1d\x5a\x99\xe9\x28\x03\xc7\x60\x01\xe6\x96\x18\xef\xa5\x8e\x59\x95\xd2\xb4\x6c\xb6\xf8\xfc\xc2\x31\xb8\x0b\xc0\x13\x98\x22\xb5\x95\xf4\x97\x9f\xc0\x18\x0d\xbe\x50\x95\x51\xa7\xcd\x76\x07\xc6\x2c\x52\x8e\x3f\x6d\x85\x15\x80\x73\x5a\x2a\xde\x45\xf2\x63\x4e\x73\xf0\x78\x8b\x96\xcf\xe9\x4a\xdd\xe7\x5f\x6f\x6f\xff\xa4\x1d\x76\x63\xcf\x8f\xb5\x84\xe4\xbf\x89\x79\x20\x95\x3d\x5e\x3b\x6e\xd0\xee\x90\x6d\x7f\x64\x9e\x28\x36\xd9\xa3\x75\xc3\x97\xd6\x7d\x90\xc6\xf3\xb4\x5e\x3e\x7e\x06\x00\x00\xff\xff\x24\x5b\x54\x46\x2e\x01\x00\x00"

func cmdMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdMainGoTpl,
		"cmd/main.go.tpl",
	)
}

func cmdMainGoTpl() (*asset, error) {
	bytes, err := cmdMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/main.go.tpl", size: 302, mode: os.FileMode(420), modTime: time.Unix(1592398438, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdServeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcb\xae\xd3\x40\x0c\x86\xd7\xe3\xa7\xb0\x66\x95\x70\x4a\xb2\xaf\x74\x16\xa8\x12\x88\x0d\x0b\x10\x62\x89\x06\xd7\x99\x9a\xce\x25\x72\x26\xe5\x52\xe5\xdd\xd1\x34\x01\x9d\x8a\x2e\x63\x7f\xbf\xf3\xfd\x33\x3a\x3a\x3b\xcf\x48\xf1\x08\x20\x71\xcc\x5a\xb0\x01\x63\xbd\x94\xd3\xfc\xad\xa3\x1c\xfb\xe0\x12\xb1\xbe\x3e\x4b\xe9\x9d\xc6\xac\xbf\xfa\x90\xbd\xbd\x67\x66\x1d\xdc\x85\x7b\x0a\x62\x01\x8c\xbd\x5e\xbb\x51\xf3\x77\xa6\xf2\x35\xb9\xc8\xcb\xd2\x53\x4e\x83\xdc\x52\xff\xef\x24\x49\x11\x17\xe4\xb7\x2b\x92\xd3\x63\xe6\x47\xd6\x33\xeb\x64\xa1\x05\x18\xe6\x44\x38\xb1\x5e\xf8\x10\x8f\x4d\x8b\x14\xa4\x3b\xe4\x18\x5d\x3a\xe2\x15\xcc\xc5\xe9\xb6\xdd\x66\xcf\x2f\x89\x2b\x18\xf3\xc1\x45\xde\x23\xa2\xbd\x61\x76\x07\xc6\x7c\x9e\x9c\xaf\x33\x3b\x15\xa7\x65\x42\x8b\x4f\xb8\x3a\x77\x9f\x58\x2f\x42\x5c\x43\xf8\x84\x16\xff\xaa\xd4\xd8\x1b\xaa\xca\xfb\xf5\x7f\xeb\xc7\x0e\xcc\x02\x46\xb9\xcc\x9a\xee\x3c\x60\x79\xa9\xbe\xc2\x0d\xe1\xab\x55\x2e\x15\xfe\x59\x5a\x64\xd5\xac\xb5\x05\x0d\x1e\xf7\xcf\x78\xff\x36\xdd\xfb\x24\xa5\xa1\x16\xc0\x84\xec\x3d\x6b\x45\x42\xf6\xdd\x3b\x2e\x4d\xdb\x7d\x91\x72\x7a\x2b\x1c\x8e\x8d\x75\xe3\x68\x77\x0f\x1a\xd4\x28\x9d\x84\x87\x9a\xdc\x9a\xdc\xae\x1e\xea\xb0\x59\xaf\xee\x90\x06\xdf\x6e\x60\xf7\x71\x4e\x4d\xfb\xaf\x51\x92\x00\x0b\xfc\x09\x00\x00\xff\xff\x50\x20\x83\xd2\x37\x02\x00\x00"

func cmdServeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdServeGoTpl,
		"cmd/serve.go.tpl",
	)
}

func cmdServeGoTpl() (*asset, error) {
	bytes, err := cmdServeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/serve.go.tpl", size: 567, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCfgGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xcd\x6e\xe3\x36\x10\x3e\x8b\x4f\x31\xd5\x61\x21\x17\x8e\x04\xf4\x68\xc0\x07\x27\xde\x00\x5b\x64\x53\x20\xc9\x76\x0f\x45\x61\xd3\xd2\x48\x66\x43\x91\x2a\x45\xda\x9b\x5d\xe4\xdd\x8b\x21\x29\x5b\x49\x9c\x6e\xd3\xa2\x3a\x18\xd2\xcc\x37\x3f\x9c\x9f\x8f\xee\x78\x79\xcf\x1b\x84\x52\xab\x5a\x34\x8c\x89\xb6\xd3\xc6\x42\xc6\x92\x54\xe8\x42\x68\x67\x85\x4c\x19\x4b\xd2\x46\xd8\xad\xdb\xe4\xa5\x6e\x8b\x46\x9f\xe9\xaf\x5f\x75\x41\x3f\x67\x3b\x2e\x45\xc5\xad\xd0\x2a\x7d\x8a\x92\x5c\x95\x68\xce\xee\x85\x2d\xb8\x69\xb5\x79\x28\xa4\x6e\xbe\x8b\x51\xdc\xf6\x5f\x5e\x47\xb9\x3d\x16\xbb\x9f\xbe\xa7\x2f\x3a\x83\x3d\xda\xbe\xe0\x9d\x78\x86\xed\x85\x71\x5d\x8f\x8a\x92\x31\xae\xf7\x5a\xdd\xdd\x37\xb9\x50\xc5\x03\x6f\x65\x4e\xde\x27\x8c\x95\x5a\xf5\x16\x6e\xd1\xec\x44\x89\xd7\xbc\x45\x98\x43\xda\x87\xcf\xb3\xbe\xe4\x75\xad\x65\x95\x32\x56\x14\x70\x51\x37\xd0\x72\xa1\xa0\xb7\xc6\x95\xd6\x19\x04\x5d\x83\xdd\x22\xf0\xae\x8b\x85\x75\xc6\x97\x28\x67\xf6\xa1\x43\x6f\x11\xc0\xf0\x8d\x25\x8b\x4e\x00\x3d\xbc\x13\xf9\x85\x47\x03\xc0\xfa\x8f\x5e\xab\x59\x4a\x07\x00\xca\x2b\xbc\xae\x59\xb2\x3c\xf7\x60\x58\x9e\x93\x97\xf8\x44\x74\xb5\x19\xc0\xd5\x26\x5d\xc3\xf1\x29\x0a\x58\x9e\x83\xe8\x81\x43\xc5\x2d\xdf\xf0\xde\x77\x5c\x61\x49\x59\x51\x2e\x42\x35\x39\x4b\x2e\xb4\x2b\xb7\xcb\xf3\x28\x78\xea\xbc\x24\xdd\x31\xc2\xf0\xb9\x26\xe7\x83\x9d\x8f\x10\x35\xe0\x8c\x3c\x19\xe4\x7a\x71\x77\x4b\x7e\x7d\xab\x87\x13\xc7\x20\x24\x1b\x22\xf8\xf7\x35\x4b\xae\x74\xc8\x44\xea\xe6\x45\x7d\x68\xa4\x22\x9c\x5e\xd7\x8c\x25\x4b\xdc\x7d\xd4\x15\xc2\xf8\xd9\x68\x2d\x0f\x45\xc2\xdd\xaa\xd5\x15\x1e\x4a\x35\x7c\xaf\x59\x12\xfb\xdd\x7f\x50\xc2\xde\x89\x16\xb5\xb3\x20\x94\x3d\x84\xeb\x5f\xea\x07\x37\x83\x6a\x25\x94\xb0\x2b\x1b\x95\x94\x50\x51\xc0\x67\x6d\xee\xd1\xf4\xa1\x3e\x52\xf4\x96\x26\x64\x1f\x84\x1e\x60\xb7\xdc\x42\xeb\x7a\x0b\x1b\x84\xde\x72\x63\xb1\x9a\x86\x17\xe0\x52\x82\xa8\x01\xdb\xce\x3e\xe4\x2c\x19\x7c\xfd\xf6\xbb\xdb\x63\x1e\xbe\xfc\x80\xae\x43\x22\xd1\x6d\xba\x66\x8f\x8c\xd5\x4e\x95\x90\x95\x75\x43\x33\x37\x81\x5f\xc3\xb2\x62\x36\x01\x34\x46\x1b\x1a\x3f\x83\xd6\x19\x05\xc7\x3d\xce\x07\xd4\xad\x1f\xd1\xec\x5d\x59\x37\x53\x96\x24\x23\xc4\xa5\x40\x59\x79\x45\xbe\x3c\x9f\x8e\x6d\x6f\xf0\x4f\x27\x0c\x56\x93\xd7\x2d\x4e\x14\xf9\x75\x17\x45\xe1\x54\xa9\xdb\x16\x95\x05\xbb\x15\x3d\x55\xe2\x41\x3b\xd8\x73\x12\x68\x70\x3d\x0e\xd3\xe7\xd1\xa7\x43\x46\xc4\x5b\x33\x5d\x74\xe2\xad\x26\x34\xdc\x6f\xb5\x89\x1d\x9d\xc2\xbb\xf0\xf6\xfe\x8b\xe8\xed\x8d\x93\xf8\x8d\x25\x49\xb2\xd8\x71\x21\xf9\x46\x62\x84\xcd\xe0\xb9\x84\x3c\x3f\x92\xff\xc9\x89\x96\x5f\x0a\x29\x97\x58\x73\x27\x6d\x84\x67\x13\x6a\x7b\xad\x0d\xdc\xc3\x6c\x0e\x86\xab\x06\x5f\xf8\x24\x48\x32\x4a\x0e\xe6\xc4\x66\xa8\xaa\xec\x49\xc6\xf7\x13\x96\x3c\x52\x54\xcf\x6b\x81\x93\x8e\xcc\x76\xa1\x95\xfa\x74\x73\xe5\x57\x30\x52\xca\x81\x4c\x94\x5a\x39\x23\x8f\x6c\x12\xbf\x89\x4e\xee\xb6\xf8\xf7\x34\xf5\x62\x3d\x47\x0c\x78\x62\x35\x9f\x6d\x24\xed\xdb\xc2\x59\xfd\x51\x34\x86\x5b\xa4\x89\x5a\x5b\xe3\x70\x0d\xf8\x05\x4b\x67\x11\xaa\x0d\xb4\x51\xe9\x3a\xf0\x91\xb9\xb1\x39\x4b\xc6\x66\x63\x4e\xe1\xce\xea\x55\x34\x39\xf0\xf5\x58\xb6\x66\xc9\x67\x2e\xec\xa5\x36\x9e\xbf\xc7\xb6\x7b\x2e\xec\xaa\xd6\x66\x75\xe4\xd6\xb1\xe8\xd9\x1a\xfb\x12\xff\x2f\x8b\x1c\x9b\xf5\xd6\xe1\xfd\x27\x5b\x7c\x9c\xcb\x1b\xe4\x55\xe0\xf0\xac\xe3\x76\x1b\x5b\x3a\xf1\x37\x22\x1d\x81\xef\x83\x76\x4a\xc7\xa2\xe9\x0c\xff\x40\x72\xb2\xbb\x14\x12\xbd\xd5\x84\x25\xc4\x87\xc6\xc0\x0f\x73\x50\x42\xfa\x59\x0d\xf7\x79\x7e\x8d\xfb\x6c\x92\x7f\x16\x76\xfb\x9e\xea\x92\xa1\x31\x93\x9c\xd6\x88\x44\x21\xed\x94\x7c\xa4\x53\xf0\xae\xbc\xee\x92\x5b\x2e\xb3\xd4\x29\x5a\x00\x62\x15\x83\xbc\x8a\x37\x37\xd4\x42\x62\xea\xc7\x9c\x25\x51\x34\x9b\x83\xc2\x7d\x46\x9d\x60\x09\xe5\x31\xf7\x8d\xcb\x3f\xa9\x96\x9b\x7e\xcb\x65\x36\x3a\x48\xb0\xf9\xaf\x39\x1b\xbe\x5f\x05\x4f\xe9\x14\x0e\xde\x5f\x49\xdf\x0d\x79\x9c\x3a\x43\xc8\x37\x28\xf2\xe3\x1c\xfd\x9b\xfc\x62\xe0\x0f\xca\xf7\xfd\xe9\x5f\x9d\x21\xdc\x2a\xb4\x72\xee\xaf\x6f\x1a\x96\xec\x78\x8f\x53\x8c\x45\xd7\xd1\xed\x35\x83\x21\xa5\x2b\x4d\xc4\xeb\x85\x34\x75\x57\xb8\x43\x39\xa3\x15\x1f\xe9\xbd\x90\xb4\xb7\xa8\xac\x79\x98\x3d\xd5\x06\x21\xa9\x17\x55\x75\x67\x78\x89\xb3\x27\xce\xa3\x90\x00\x3f\xdf\xfe\x72\xed\x9d\x8f\x01\x24\x9c\xb2\xe4\xf1\xfb\x35\x19\x9a\x74\xba\x2e\x9f\x0e\x0d\x21\x06\xa2\x02\x84\xa2\x0c\x9b\xfa\x63\xfc\xd3\xfd\xc8\xfe\x0a\x00\x00\xff\xff\xe6\x35\xa2\xa2\x86\x0b\x00\x00"

func configCfgGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configCfgGoTpl,
		"config/cfg.go.tpl",
	)
}

func configCfgGoTpl() (*asset, error) {
	bytes, err := configCfgGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/cfg.go.tpl", size: 2950, mode: os.FileMode(420), modTime: time.Unix(1593081904, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configWorkersGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x4d\x6b\xdb\x4c\x10\x3e\x6b\x7f\xc5\xbc\x3a\xbc\x95\x5a\x47\x86\x1e\x5d\x7c\x48\x68\x0a\xa1\x90\x96\x16\xd2\x43\x30\x61\xbd\x19\xd9\x8b\xa4\x5d\x31\xbb\x92\x1b\x1c\xfd\xf7\x32\xbb\xb2\x48\x14\x13\x1d\x67\xe6\xd9\xe7\x63\x46\xad\x54\x95\xdc\x21\x28\x6b\x4a\xbd\x13\x42\x37\xad\x25\x0f\x99\x48\x52\x24\xb2\xe4\x52\x91\xa4\x84\x65\x8d\xca\xa7\x42\x24\xe9\x4e\xfb\x7d\xb7\x2d\x94\x6d\x96\xb5\x34\x0a\xe9\xa2\xd2\x7e\xd9\x1d\x70\xd9\x7f\x4e\x45\x2e\x84\xb2\xc6\x85\x07\xfe\x58\xaa\x90\x6e\x4c\x69\x7f\x23\xf5\x48\xd0\x1d\xb0\x88\xc5\x5b\xd9\x20\xac\x21\xd5\xa6\xb4\x17\x2e\x74\xd3\x13\xe0\xf2\xe7\xcd\x38\x7f\x06\x20\x5b\x3d\x9f\xff\x7a\xf5\x1d\xb1\xe5\xf1\x33\xf3\x8f\xdb\x8b\x2a\x74\xa7\xf1\x6f\xd6\x5e\x49\x1e\x3e\x37\x5e\x5a\xbb\x95\x14\x6c\xf4\x92\xe0\xb2\x97\xba\x96\xdb\x1a\xe3\x94\x83\x35\x34\xb2\xbd\x7f\x8d\xdb\x38\x4f\x9d\xf2\xc7\xe1\xf8\xd6\xf2\x0a\x8e\xc3\x62\x2e\x74\x05\xf0\xb2\x3c\xf9\x5d\xbd\x2a\x47\x9d\xab\x20\x94\xcb\x83\x10\xfe\xa9\x45\x88\xdd\xeb\xbf\xda\xf9\x5f\x5d\x8d\x10\xd9\xe1\x28\x92\x06\x9d\xe3\x55\x4e\x9f\xf3\xa4\xcd\x4e\x24\x6f\x6c\xbc\x63\x82\x79\x96\x4b\xb8\x93\xb5\x7e\x94\x1e\x41\xed\x51\x55\x0e\xfc\x5e\x7a\xe0\xe0\xb5\x42\x40\x26\x07\x6b\xc0\xef\x11\xdc\x93\xf3\xd8\x88\xb2\x33\x0a\x32\x82\x8f\x33\x7d\xf9\xf4\x54\xd6\xcb\xba\x43\xd0\xc6\x23\x95\x52\xe1\x71\xc8\x21\x9c\x18\x6b\xd7\x25\xc4\xf6\x7a\x0d\x46\xd7\xf0\xfc\x0c\xe3\xd1\x15\x77\x5c\xff\x51\x46\x78\x5e\xdc\xb8\x5b\x5d\x67\x39\x83\x12\x42\xdf\x91\x61\x80\x48\x06\x91\x48\xa2\x05\xd8\x0a\x56\xeb\xf8\x58\x91\xdd\x6f\x5e\xdb\xcc\x03\xd3\x7f\xb6\x7a\x09\x8f\x77\x5e\xdc\xe2\x21\x4b\x95\x34\x1f\x3c\xff\x0c\x3d\x92\x87\x3a\xf8\x2c\xe1\x30\xe6\xe6\x2d\xdc\x6f\x62\xaa\x69\xce\x94\x22\x29\x2d\xc1\xc3\x02\x7a\x26\x25\x69\x76\x08\x92\x82\x23\x26\x7a\x38\xc9\xa1\x62\xbe\x83\x59\xfe\x59\x9f\x6f\xbe\x4c\xc2\xce\x29\xd3\xa6\xe7\x20\xa7\x25\x18\x3e\xd9\x14\x3e\x8d\x5b\xce\xfa\x3c\x17\x09\xa7\xc0\xaa\x5e\x04\x13\xf7\x79\x1d\x82\x76\xe8\x5d\x58\x5a\xcc\xfd\x74\x30\xec\x81\xab\xd4\xd5\x58\xbc\xb3\xc9\xf0\x48\x76\x42\x45\xde\xfc\xcd\x1c\x3b\x18\xf9\xff\x9f\xb5\xd8\xdb\x08\x5f\x9d\xd8\x17\xac\x78\x10\xff\x02\x00\x00\xff\xff\x9e\x5f\xf1\x4e\x88\x04\x00\x00"

func configWorkersGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configWorkersGoTpl,
		"config/workers.go.tpl",
	)
}

func configWorkersGoTpl() (*asset, error) {
	bytes, err := configWorkersGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/workers.go.tpl", size: 1160, mode: os.FileMode(420), modTime: time.Unix(1592390140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dbschemaMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\x23\x21\x10\x86\xeb\x9d\xa7\x18\xad\xae\xd8\xd5\x2d\xd0\xbb\x3b\xc9\xed\x55\x6e\xd3\x00\x3b\xc6\xc8\x86\x71\x06\x36\x51\x64\xf9\xdd\x23\x63\x6f\xe4\x44\xa1\x1a\x3e\xfe\xf9\xf5\x71\xb6\xfe\x68\x03\xe1\xec\x8a\x3f\x50\xb2\x00\x31\x9d\x59\x2a\x0e\xd0\xf5\x21\xd6\xc3\xe2\xb4\xe7\x64\x4e\x36\x7b\x12\x75\x8c\xd5\x58\x49\x2c\x1f\x66\x76\xfd\xf7\x88\x2c\x8e\xf2\x9b\x29\xaf\x27\x95\x62\x10\x5b\xa9\x87\x11\xc0\x98\xc0\x18\xa8\xa2\x5a\xf0\xf7\xc2\x3d\x4b\xa0\x7b\x70\x13\x28\xd3\x6d\x15\x1b\x44\x17\xf3\x6c\xab\x45\xa5\x62\xc8\x2c\x84\xfa\xef\x8b\x0e\xfc\x07\x95\x3a\x1f\xc3\x97\x35\x2a\x5e\xa3\x3a\x30\xaa\x88\xda\x68\xad\x7f\x54\x06\xde\xa7\x8a\xea\xfd\x29\x0a\xb0\x5f\xb2\xc7\xff\x77\xdf\xc1\x73\xce\xbb\x2a\x58\xaa\xc4\x1c\x26\x9c\xa3\xe0\xec\xf4\xe3\x79\x1b\x65\xc4\x21\xe6\x3a\x21\x89\xb0\x8c\x78\x81\x6e\x76\x7a\x47\xf5\x5f\x29\x54\xcb\xf0\xf8\xb7\x6e\xd7\xfb\x56\xe4\xbc\xe3\x45\x3c\x5d\xa0\xeb\x1a\xdf\x20\x22\xb6\x69\x5a\xd1\x36\xca\x06\xd7\xe9\x46\x1b\x68\xa7\x4f\x6b\x4d\xe9\x27\xe8\xae\x23\x74\x42\x75\x91\xfc\x24\xb6\x7a\x37\xe1\x11\xae\xf0\x19\x00\x00\xff\xff\x9f\x7a\xa8\x60\xd6\x01\x00\x00"

func dbschemaMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_dbschemaMainGoTpl,
		"dbschema/main.go.tpl",
	)
}

func dbschemaMainGoTpl() (*asset, error) {
	bytes, err := dbschemaMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dbschema/main.go.tpl", size: 470, mode: os.FileMode(420), modTime: time.Unix(1592388172, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _infoMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\xae\xc2\x30\x0c\x40\xe7\xf8\x14\x96\xd7\xff\xb9\x40\x25\x06\xd8\xd8\x11\x73\x4d\x9a\x44\x81\x2a\xb1\xe2\x34\x12\x42\xbd\x3b\x0a\xdd\x00\x8f\xef\xd9\xf2\x13\xb6\x77\x0e\x0e\x63\xf2\x19\xa0\x3e\xc4\xe1\x29\xf9\x8c\x5a\xcb\x62\x2b\x3e\xc1\x1c\x44\xb0\x8f\xd6\x12\x53\xc0\xf1\xa6\x39\x0d\xc4\x22\x34\x82\xb9\xb8\xa2\x31\xa7\x0f\xd9\x36\xda\x17\xce\x1c\x7e\x5c\x57\x0e\x5d\x1e\x97\x38\x4f\x5f\xf2\xda\x29\x8d\xb0\x02\x34\x2e\xd8\xff\xef\xdf\x51\x5b\xcc\x80\x44\xf8\x07\xc6\x90\xba\xd2\xa2\x75\x3b\xb5\xec\x7d\x9e\x27\xfa\x87\x15\x5e\x01\x00\x00\xff\xff\x3e\x18\x54\xc8\xd1\x00\x00\x00"

func infoMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_infoMainGoTpl,
		"info/main.go.tpl",
	)
}

func infoMainGoTpl() (*asset, error) {
	bytes, err := infoMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "info/main.go.tpl", size: 209, mode: os.FileMode(420), modTime: time.Unix(1592388172, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initializationInitFunctionsGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xc1\x4e\xe3\x30\x10\x86\xcf\x99\xa7\x18\xe5\xb0\x4a\xaa\xae\x73\x5f\xa9\x87\x6d\x8b\x10\x12\x70\xa0\x70\xae\x1c\xc7\x31\xa6\xc9\x38\x9a\x4c\x10\xa5\xca\xbb\x23\x27\x15\xaa\x7a\x41\x1c\xed\xf9\x7e\xff\x9f\xa7\xd3\xe6\xa0\x9d\x45\x4f\x5e\xbc\x6e\xfc\xa7\x16\x1f\x08\xc0\xb7\x5d\x60\xc1\x0c\x92\xd4\x79\x79\x1d\x4a\x65\x42\x5b\x34\x9a\x8c\xe5\xbf\x07\x2f\x85\xe6\x36\xf0\xb1\xa8\xca\xf4\x27\x84\xb4\xf4\x1f\x57\x54\xef\x79\xe8\x7a\x4b\x45\x13\x1c\x0f\x7d\x0a\x90\xa4\xa7\x93\xea\x38\xbc\x59\x23\x7b\xd2\xad\x1d\xc7\xc2\x04\xaa\xbd\x4b\x21\x07\x90\x63\x37\x4b\x3e\x84\x6a\x68\x2c\xf6\xc2\x9e\x1c\xc0\xbb\xe6\x28\xb9\x5d\x23\x5e\x8e\x57\x98\x56\x5a\x74\xa9\x7b\x8b\x26\x10\x59\x13\xbf\x95\x42\xf2\xf8\xff\x79\x77\x05\xc6\xab\xa9\xa3\x1e\xc8\x4c\xb3\xed\x39\x9a\x99\xda\xe1\x62\xb6\x50\x9b\xda\x2d\xd1\x92\xf0\x11\x17\xb3\xb5\xba\x89\xa7\x1c\x2d\x73\x60\x3c\x41\xc2\x56\x06\x26\xac\x4a\x75\x47\x5e\x62\x5a\x6d\xd7\x6a\x13\x88\x5e\x9e\xee\xcf\xe1\x1c\xc6\x8b\xa6\xd8\xfd\xdb\x96\x69\x9f\x6a\x67\x65\x33\x45\xb2\x3f\xb1\x27\x3e\x94\x43\xb2\x5f\x46\x0e\xff\xad\x70\xa6\x6e\x27\x8a\xb2\xfc\x5b\xce\x32\xc3\x08\x5f\x01\x00\x00\xff\xff\x88\x7d\xbc\x9f\xf7\x01\x00\x00"

func initializationInitFunctionsGoTplBytes() ([]byte, error) {
	return bindataRead(
		_initializationInitFunctionsGoTpl,
		"initialization/init-functions.go.tpl",
	)
}

func initializationInitFunctionsGoTpl() (*asset, error) {
	bytes, err := initializationInitFunctionsGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "initialization/init-functions.go.tpl", size: 503, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initializationMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xdc\x36\x10\x3d\x93\x5f\x31\x11\x90\x56\x72\x55\x2e\x7a\xe8\xc5\x80\x0e\xf6\x6e\x1a\x18\x68\x7a\xf0\x26\xc8\xa1\x28\x0a\x2e\x35\x94\x59\x53\xa4\x40\x8d\xec\x6e\x17\xfa\xf7\x82\xa4\x14\x6f\x5c\xc3\xe9\x49\x5a\xf2\xcd\x9b\x99\xf7\x9e\x76\x90\xea\x5e\x76\x08\xc6\x19\x32\xd2\x9a\x7f\x24\x19\xef\x38\x37\xfd\xe0\x03\x41\xc9\x59\xa1\x7b\x2a\x38\x2b\xc6\xa3\x53\xf1\x49\xa6\xc7\x82\x73\x56\x74\x86\xee\xa6\x83\x50\xbe\xdf\x58\xe9\x14\x86\x1f\xef\x0d\x6d\x64\xe8\x7d\x38\x6e\xac\xef\x8a\x6f\x61\xc8\x7b\x3b\x3e\x43\x8d\x26\x4c\xc3\x88\x2e\x12\x84\xe9\xf9\xed\x14\xb4\x7c\xc0\x8d\xb2\x26\x4d\x70\x3a\x89\x21\xf8\xbf\x50\xd1\x9f\x4e\xf6\x38\xcf\x1b\xe5\x9d\x36\xa9\xf3\x7f\xef\xda\xc3\xa8\xee\xb0\x97\x05\xaf\x38\x57\xde\x8d\x04\xda\xca\x6e\x9b\x4a\xa0\x81\x62\x2d\xce\x77\x2d\x6a\x39\x59\xba\x71\x86\x6e\x1c\x61\x78\x90\x16\x1a\xf8\x19\x2e\x20\x2a\x20\xf6\xa8\xbc\x6b\x39\xd7\x93\x53\x10\x41\xa5\x82\x0b\x65\x8d\xd8\x7a\x47\xf8\x37\x55\x70\x91\xf9\xc4\x56\x77\x70\xe2\xec\x41\x86\xa4\x72\xee\x37\x42\x03\xbd\x1c\x7e\x8f\x27\x1f\x7c\x3b\x59\xfc\x23\x32\x95\x67\x45\x35\x5c\x64\x11\xc4\x3b\x47\xe1\x58\x01\x86\xe0\xc3\x89\x33\xb6\xbb\xbe\x04\x48\x64\x3b\x49\xf2\x20\x47\xac\x39\x63\xbf\x5d\x7d\xdc\x5f\xa6\xd3\xf8\x56\x73\x36\x73\xce\x94\xee\xe0\xb2\x81\x85\xf5\x16\x65\x9b\xfb\x97\x4a\xbc\xb7\xfe\x20\xed\x9e\x82\x71\x5d\xf9\xa4\x44\x55\x71\xce\x1e\x53\x55\xb4\x5c\x7c\x96\x86\xde\x07\x3f\x0d\xa7\x99\x33\xed\x03\xf4\x69\xdc\xfa\x29\x32\x18\x22\x38\x48\xb7\xe4\x68\xdd\x30\x8e\x1a\xb7\x8e\x7a\xf9\x89\xb2\x6e\xbb\x29\xe4\x88\x31\x66\xf4\xc2\x05\x4d\x03\xbb\xeb\x84\x67\x2b\xb8\xf9\x1a\x5e\x2a\xdd\x89\xdd\xb5\x88\x4a\x7f\xcc\x90\xea\x99\x15\x8c\xcd\x80\x76\xc4\x6f\xf3\xec\x31\x3c\x18\x85\xe3\xeb\x64\x9c\x33\xf6\xd8\x89\xab\xb6\x2d\x7f\x8a\x9a\xb0\xce\x43\xf2\x68\x19\xfa\xc9\xba\xaf\xb5\xf8\x7f\x3e\xd6\x2f\xcb\x52\xe5\xe9\x5b\xd4\x18\xe0\xb1\x13\x3b\xef\xb0\xac\xe2\x91\xbf\x8f\x2a\xa7\x6f\x46\xdc\x22\x85\xe3\x8d\x53\x01\x7b\x74\x24\xad\x3d\x7e\x72\x64\x6c\x19\x71\xec\x85\xe0\xd6\xe9\x62\x69\x58\xf3\xf4\x2b\x8d\x59\xc1\xc1\x7b\x9b\x7b\x32\x86\x21\x39\x79\xb6\x4c\xf9\x9d\x8a\x0b\x58\xdf\x89\x5d\xa6\xad\x32\xd4\xe8\xb8\x06\xbc\x69\xc0\x99\x2f\xf5\xec\x0c\x27\x3e\x1b\xba\x7b\x17\x37\x2d\x31\x84\x4a\xe4\xd7\x62\x2b\xdd\xf7\x94\x3a\x40\x01\x3f\x2c\xfe\x2f\x9c\x73\x7e\x04\xa4\x29\xb8\x44\xdf\x24\xfa\x74\x3c\x27\x90\xd1\xf0\xc6\xdf\x2f\xfd\xce\xbb\xfd\x22\x49\xda\xd7\xe8\x23\xf9\x5c\xbe\x90\xdd\x2f\x46\x54\xf9\x8b\x79\xec\x52\xe4\xcb\x68\xb9\xd1\xb0\xe4\xee\x6a\x22\xff\xc1\x74\x41\x52\xce\x97\xf2\x93\xa3\x1a\x16\xc5\xd6\xbf\x16\xb1\x40\xd6\xb4\x6e\xbd\x73\x9f\x6e\x7f\xad\xa1\x98\x86\xa2\xe2\x2f\xca\xf6\x8a\x66\xcb\x52\x99\xd4\x78\x37\x82\x96\xc6\x62\x9b\xa8\x56\x9d\xa2\x43\x6b\x5c\xcf\xb9\x6e\x9c\xf6\xa5\xee\x49\xec\x87\x60\x1c\xe9\xb2\xb8\x1a\x06\x6b\xb0\x85\xb7\x2d\xbc\x1d\xa1\x5f\x59\x8b\x1a\x96\x6d\xd2\x94\x8b\x0c\xe7\xec\x33\xff\x37\x00\x00\xff\xff\x18\x83\x55\xec\x27\x06\x00\x00"

func initializationMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_initializationMainGoTpl,
		"initialization/main.go.tpl",
	)
}

func initializationMainGoTpl() (*asset, error) {
	bytes, err := initializationMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "initialization/main.go.tpl", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4e\xc4\x30\x10\x44\x6b\xef\x57\x2c\xae\x12\x9d\xe4\xeb\x41\x29\x22\xa4\xa3\xbb\x02\x04\x2d\x32\xce\xc6\x18\x6c\xaf\x65\x27\x47\x11\xe5\xdf\x91\x13\x9d\xa0\xb8\x72\xe6\x8d\x3d\xb3\x49\x9b\x6f\x6d\x09\x83\x76\x11\xc0\x85\xc4\x79\xc2\x06\x84\xf4\x6c\x25\x08\xc9\x45\x02\x08\x69\xdd\xf4\x39\x7f\x28\xc3\xe1\x38\xe7\x51\x5f\xe8\x68\xbc\xdb\xc8\xb2\xa8\x94\xf9\x8b\xcc\xf4\x1e\x75\xa0\x75\x3d\x9a\x30\xc8\xdb\x80\xe3\xe8\xec\x6d\xe6\xe2\xc8\x12\x5a\x80\x71\x8e\x66\x5b\xd3\xb4\xb8\x80\xd0\x29\xe1\x7d\x87\xc6\x3b\x75\xa6\x9f\x3e\xa5\xa6\xdd\x4c\xf5\x5a\xea\xec\x0e\x65\x8f\x12\x0f\xb8\xff\xad\x5e\x28\x5f\x9c\xa1\xb3\x0e\x84\x07\x94\x58\x76\x2d\xf7\x37\x6f\x94\x8b\xe3\x88\x1d\xd6\x3a\xd5\xff\x59\x3b\x3f\x79\x6d\x0b\x76\x68\xc2\xa0\x9e\x68\xda\xe4\xb5\xef\x91\x43\xd0\x71\xf8\x87\xaf\x4e\x4d\xb8\x11\x29\xe7\xba\xb4\x66\x9f\xe7\xd8\x70\x51\x7d\xb6\xa5\x7d\xd8\xc0\x5d\x87\xd1\xf9\x7a\x90\xf0\x6c\xd5\x49\x4f\xda\x37\x94\x73\x0b\x62\x05\x58\xe1\x37\x00\x00\xff\xff\x8d\x60\x52\x41\x87\x01\x00\x00"

func mainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTpl,
		"main.go.tpl",
	)
}

func mainGoTpl() (*asset, error) {
	bytes, err := mainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tpl", size: 391, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xc1\xaa\xdb\x30\x10\x45\xd7\x9a\xaf\x18\xb2\x28\x89\x69\xed\x7d\x21\xab\x2e\xda\x40\x29\x98\xf6\x03\x32\x96\xc6\xc9\x10\x59\x72\xa5\x71\x43\xfa\xc8\xbf\x3f\x64\x3b\x2f\x59\xce\x68\xce\xb9\x17\x8d\x64\x2f\x74\x62\x1c\xa2\x63\x9f\x01\x64\x18\x63\x52\xdc\x9c\x44\xcf\x53\x57\xdb\x38\x34\x9e\x82\xe5\xf4\xe5\x22\xda\x50\x1a\x62\xba\x35\xae\xdb\x00\x34\x0d\xb6\x07\x94\x8c\x84\x1a\x47\xf4\xfc\x8f\x3d\x4a\x50\x4e\x3d\x59\xc6\x3e\xa6\x65\x22\xab\x12\x03\x5e\x45\xcf\xe8\x48\xa9\xa3\xcc\x35\xe8\x6d\xe4\x99\xff\x00\xde\xc0\xb8\xae\xfe\x93\x28\xe4\x05\x21\x0f\x60\x9a\x0a\x8c\xf9\xc1\x89\x4b\x52\x60\x76\xec\x50\x23\x92\x73\xa8\x67\xc6\xbf\x13\xa7\xdb\x53\x92\xc1\x60\xd5\xc0\x7d\x69\x87\x32\x8c\x9e\x07\x0e\x4a\x73\x85\xd8\xcf\xcc\xb1\x3d\x1c\x9f\xc8\xa3\x0a\x66\x4d\x93\xd5\x52\xa3\x72\x5d\xfd\xbb\xfd\xf9\x2d\x86\xb0\xaa\x7e\xf1\xb5\xc5\xc4\x3a\xa5\x90\x51\x82\xa8\x90\x97\xff\xec\x50\x42\xd6\xf2\x3d\xaf\xee\x1a\xfa\x29\xd8\x99\xd9\xba\xae\x58\xf0\xc5\xb8\xc3\xaa\x2d\x21\xd2\xe3\xfa\xb8\xdf\x63\x10\x5f\x76\xe6\xb1\x41\xd7\xd5\xdf\x59\xcb\xc0\x56\x63\xda\xee\xc0\xdc\xc1\x2c\x0d\xf0\x53\x5b\x6e\x57\xdf\xd7\x55\xf3\xb9\x5c\xdc\xe1\x3d\x00\x00\xff\xff\xab\x75\xc9\xd5\xd0\x01\x00\x00"

func modelsQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsQueryGoTpl,
		"models/query.go.tpl",
	)
}

func modelsQueryGoTpl() (*asset, error) {
	bytes, err := modelsQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models/query.go.tpl", size: 464, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _versionGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x4d\x0e\x82\x30\x10\x05\xe0\x75\xe7\x14\x2f\x5d\xc1\xc2\x8a\x07\x60\xa1\x67\x20\x6e\x4d\x53\x4b\x33\x2a\xd3\xa6\x14\x37\x84\xbb\x1b\xd4\x04\x56\xf3\xf3\x5e\xbe\x64\xdd\xd3\x06\x8f\xc1\xb2\x10\xf1\x90\x62\x2e\xa8\x48\xe9\x79\x36\x29\xc7\x87\x77\xe5\x26\x76\xf0\xcb\x72\x64\xe9\xa3\xa6\x9a\xe8\x6d\xf3\x5a\xb9\xfa\x3c\x72\x14\xb4\xd0\x27\xd3\x98\xe6\x90\x9d\x26\x75\x99\xf8\x75\x07\x30\x96\xcc\x12\x48\x75\x36\x00\xdb\x5d\x13\xf5\x93\x38\xb0\x70\xa9\x6a\xcc\xa4\x56\xd6\x9c\x53\x32\x9b\xf7\xdf\x76\xd9\x4f\x6d\xf1\x9d\xbb\xff\xaa\xb7\xe8\x6c\xa0\x85\x3e\x01\x00\x00\xff\xff\x51\x16\xd7\xbb\xcb\x00\x00\x00"

func versionGoTplBytes() ([]byte, error) {
	return bindataRead(
		_versionGoTpl,
		"version.go.tpl",
	)
}

func versionGoTpl() (*asset, error) {
	bytes, err := versionGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "version.go.tpl", size: 203, mode: os.FileMode(420), modTime: time.Unix(1593082579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workersApiMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5f\x4f\xeb\xc6\x13\x7d\x8e\x3f\xc5\xc8\x4f\x76\x14\xec\xab\xdf\xef\x0d\xa9\x95\xa2\x90\x0b\x48\x40\x50\x12\xd4\x4a\x55\x55\x6d\xd6\x13\x7b\x89\xb3\xe3\xce\x8e\x71\x28\xca\x77\xaf\x76\x6d\x20\xd0\x8b\xaa\xe6\x21\xf6\xce\x9c\x3d\x67\xfe\xba\x51\x7a\xa7\x4a\x04\xd5\x98\x28\x32\xfb\x86\x58\x20\x89\x46\xb1\x45\xc9\x2b\x91\x26\x8e\x46\xb1\x98\x3d\xc6\x51\x34\x8a\x4b\x23\x55\xbb\xc9\x34\xed\xf3\x92\xce\x74\x65\x72\x5d\x99\xf8\x2b\x47\xbe\x37\x45\x51\x63\xa7\x18\xbf\xc0\x10\xbb\x4f\x9e\x5a\x59\x8d\x7c\xb6\x33\x92\x2b\xde\x13\x3f\xe7\xaa\x31\x39\xa3\x2d\x90\xff\x15\x5a\x53\xf9\x35\xa6\xed\x30\x7f\xfa\x5f\xde\x30\x3a\x14\xe7\x69\x3f\x61\x9d\xe1\xb6\x71\x68\x3d\x0d\xb7\x2e\x24\xfc\xf2\x92\x35\x4c\x8f\xa8\xe5\x0f\xab\xf6\x78\x3c\xe6\x9a\xec\xd6\x04\x99\x7f\xfa\x8c\xdd\x52\x1c\xa5\x51\xb4\x6d\xad\x86\x4b\x94\x15\xf2\x13\x72\xa2\xb7\x25\x8c\xfb\x8b\xd9\x6c\x5b\x4e\xa0\xa6\xb2\x44\x86\x71\xaf\x94\xcd\xad\xf0\x73\x0a\x63\xd5\x98\xac\xbf\x02\x2f\xd1\x88\x51\x5a\xb6\xbe\x31\xd9\x1d\x76\xef\x54\xd9\xb4\x31\x13\x28\x51\x96\xd4\x0a\x72\xd2\x93\x4d\x40\x6f\xcb\x34\x8d\x8e\x83\xfa\x67\xff\x47\xb1\x80\x3e\x8d\x29\x05\xdf\xec\xec\x4a\xd9\xa2\x1e\xe4\xe1\xfc\x27\xd0\x55\x10\x1f\x98\xd2\x28\x1a\xe5\x39\x4c\xa1\x24\x2a\x60\xa3\x1c\xc2\x7b\x8b\xc1\x89\xd2\xbb\x68\xc4\xd9\x83\xc3\xe4\xdd\x9e\x2d\xf1\xcf\x16\x9d\x5c\x5f\xa4\x3f\x74\xaa\xfa\xfa\xfe\xc7\x1e\x4d\x4f\xc8\xc8\x6f\xce\x9a\xca\x10\x4c\xcf\x77\x13\xd2\x1a\xb2\xcb\xfa\x53\xea\x23\x34\x5b\x18\xaa\x94\xcd\xad\xda\xd4\x38\x5b\x2c\x57\x3e\xa3\x81\xa6\x44\xf1\x96\x24\x7d\xcd\x36\x8d\x46\xc7\x3e\xb3\x15\x0a\x28\xf0\xe3\x4e\xad\xc0\x93\xaa\x5b\x04\xb2\x20\x15\x02\xf7\xaa\xa0\xc9\x0a\x1e\x04\x12\x2d\x87\x74\x02\x52\x29\x81\xce\xd4\x35\x38\x53\x5a\x55\x07\x1a\xa9\x98\xda\xb2\x02\x2d\x87\xec\x82\x2c\x26\x69\x8f\x3b\xe5\xa9\x94\x0b\x42\x05\x78\x29\x65\x0b\xd8\xb6\x2c\x15\x72\x60\x68\x98\x34\x3a\x67\x6c\x09\xae\xa2\xb6\x2e\x60\xe3\x0b\x4c\x4d\x83\x45\xf6\x21\xc5\x69\x63\x86\x82\xac\x87\xb0\x7f\x86\x6f\x21\x5b\xf1\x0d\xf4\x12\xd9\x45\xcb\x4a\x0c\xd9\xe4\xcb\x4b\xe9\x5b\x75\x4e\x3a\x30\xf8\x12\x81\x71\xcf\xb3\x42\x4d\xb6\x48\x87\x7a\x71\x16\xc6\x22\x89\xf3\x02\x9f\xe2\x09\xf8\xb1\x4b\x38\x8c\x4c\x3f\x2f\xe9\x50\xf4\x4b\x94\x24\xce\x9d\x28\x69\xdd\x2b\xae\xeb\xe7\x6d\x89\xae\x21\xeb\xf0\x17\x36\xe2\x67\x98\x61\x3c\xd8\x43\x74\x3d\xc3\xa8\x5f\xff\x6c\xd5\x6a\x5f\x94\xa4\x9b\x80\xdf\xb4\x6c\xda\x34\x3e\xee\xa3\xff\xcb\xc7\x1e\x78\x85\x8c\x60\x1c\x58\xc4\x02\x0b\x10\x02\x55\x14\x41\x09\xaa\xbe\xd7\xce\xef\x9e\xd1\xb0\x25\x86\xe9\xfd\x35\x74\xc4\x3b\x5f\xf3\x11\x8c\xf3\x28\xf2\x5c\x3e\xb1\x3b\x92\xef\xd4\xda\x22\xf9\xcf\xb1\x0e\xa1\x2e\xd1\xb5\xb5\xbc\xd2\x64\xcb\x60\x4d\xba\xf4\x55\xa1\x5f\x6d\x8e\x8e\x6f\xcb\xda\x8f\xa4\x5f\x49\x76\xd9\x8c\xd8\x9d\x7c\x02\x82\xed\x0e\xbb\x24\xbc\x2c\x1a\xdf\x4b\xe7\xd5\xa6\x75\x4d\x1d\x16\x0b\x36\xa5\xb1\xee\x1c\x00\x7e\xfb\xdd\x09\x1b\x5b\xbe\xc4\xe3\xf8\x38\x79\x87\xdc\xa2\x54\x54\x7c\x82\x5c\xce\xd7\xf1\x04\xe2\xfb\xc5\xaa\x7f\x3e\x84\xc7\xc5\xfc\x66\xbe\x9e\xfb\xb7\xc5\xfd\xfa\x7a\x71\xb7\xfa\x40\x74\x85\xaa\x40\xfe\x44\x34\xd5\x1a\x1b\xf1\x57\xa6\xad\x54\xc4\xe6\xaf\x30\x6f\xde\x30\xf3\xfb\x62\xe5\x6c\xfd\xdc\xa0\x3f\xff\x7a\x36\x5b\x2d\xbf\x9f\xad\x69\x87\xc1\xff\xd8\x49\x6f\x7e\xb8\xbe\xe8\x85\xe6\x87\x86\xdc\x17\x42\x37\xc6\xee\x4e\x59\x6f\xd0\x96\x52\x9d\x04\x38\x63\x2c\xd0\x8a\x51\xb5\x3b\x07\xe1\x16\xbd\xe7\x56\x1d\xa6\x25\x7a\xa6\xd7\xdf\xff\xbf\x7d\x9b\x40\x9e\xc3\xad\x3a\x98\x7d\xbb\x1f\x56\xdd\x92\x80\x29\x2d\x31\x16\xb0\x79\x06\x65\x9f\x81\xb6\xb0\x57\x8f\xc4\xb0\x61\xea\x1c\xb2\x0b\x1d\x3c\x46\x7f\x07\x00\x00\xff\xff\x2f\xd0\x59\x48\x37\x07\x00\x00"

func workersApiMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_workersApiMainGoTpl,
		"workers/api/main.go.tpl",
	)
}

func workersApiMainGoTpl() (*asset, error) {
	bytes, err := workersApiMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workers/api/main.go.tpl", size: 1847, mode: os.FileMode(420), modTime: time.Unix(1593082579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workersChiefGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x8b\xdb\x3e\x10\xc5\xcf\xd2\xa7\x10\x3a\x59\x8b\xff\x32\xfc\x8f\x0b\x7b\xd8\x6e\x93\x36\x90\x96\xd2\xa5\xe4\xb8\x68\x95\xb1\xa2\x46\x91\xcc\x48\x76\x58\x82\xbf\x7b\xb1\x64\xd3\x06\xc2\x96\xde\x3c\xf3\xde\xfc\xde\xc8\x52\xa7\xf4\x51\x19\x60\xe7\x80\x47\xc0\x48\xa9\x3d\x75\x01\x13\xab\x28\xe1\xc6\xa6\x43\xff\x2a\x75\x38\x35\x4e\x79\x0d\xf8\xdf\xd1\xa6\xa6\x3f\x43\x33\xfc\xcf\xaf\xf5\x68\xb1\xef\x22\xf8\xc6\x05\x83\x7d\xe4\x94\x12\x7e\xb9\xc8\x0e\xc3\x4f\xd0\xe9\xc5\xab\x13\x8c\x63\xa3\x83\x6f\xad\xe1\x37\xb5\x79\x81\x46\x75\xf6\x7d\x43\x1b\xc2\xab\x42\x4e\x05\xa5\x6d\xef\x35\xdb\x78\x9b\x9e\x0e\x16\xda\xca\x05\x63\x00\xd9\x5d\xd9\x41\xae\x7c\xc2\xb7\x9a\xe9\xd6\xb0\xbb\x92\x2c\x9f\x5a\x23\x58\x7f\x06\x99\x07\xd8\x85\x12\x9d\x3f\xee\x1f\x72\xf7\x2b\x9c\x0b\x49\xcc\x82\xfc\x11\xe1\x23\xb4\xaa\x77\xe9\x3b\xe8\x30\x00\xfe\x96\x9e\x21\xad\x06\xf0\xe9\xb3\xf2\x7b\x07\x58\x4d\xcb\x54\x30\x75\x32\x2b\x6b\x62\x8a\x20\x83\x42\xe6\x60\x00\xc7\xe6\xcd\xb6\x53\x41\x09\x89\x67\x9b\xf4\x81\xe5\xa1\xd2\xcc\x7e\xad\x22\x64\xc6\x76\x70\x6b\x95\x94\xab\x97\x6a\x85\x18\xf0\x9e\x12\x42\x0a\xef\x61\x21\x66\x61\xc1\xfe\x39\xbf\xf1\x6d\xb8\x35\x30\xf5\x17\xff\xbe\x9c\xf0\x96\x6d\xa7\xd0\x2f\xb6\x91\x52\x42\xca\x3f\x96\x3b\x9b\x0e\x6b\x0b\x6e\x1f\xcb\x91\x65\x29\x84\x9c\x18\xdb\x60\xaa\xcc\xa9\xe7\xa3\x7d\x81\x18\x95\x01\x41\xc9\x28\x28\x9d\x19\x25\xe4\x0a\x56\x71\xd5\x75\x2f\x4e\xbd\x01\xf2\x9a\xf1\xf9\xc6\xf9\x34\x53\xfe\xf9\xe3\x7e\xbf\xcb\xcd\x6a\xbe\xd0\x52\x3d\x7e\xdb\x3c\x03\x0e\x80\x35\x53\x9d\x95\x9f\x20\x95\xb2\xd2\xad\xa9\x6f\xa4\x14\x30\xaf\xd9\x15\x65\x1d\xc2\x07\x85\x42\x88\xbf\xa4\x15\x5f\xcd\xca\x43\x9c\x1e\xcd\x7b\xae\x7f\x4f\xa7\x04\x21\xf5\xe8\x59\xde\x82\x8e\xf4\x57\x00\x00\x00\xff\xff\x32\x8a\x12\x59\xa4\x03\x00\x00"

func workersChiefGoTplBytes() ([]byte, error) {
	return bindataRead(
		_workersChiefGoTpl,
		"workers/chief.go.tpl",
	)
}

func workersChiefGoTpl() (*asset, error) {
	bytes, err := workersChiefGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workers/chief.go.tpl", size: 932, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workersFoobarMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x8b\xdb\x40\x0c\xc5\xcf\xd2\xa7\x10\x3e\x94\xf1\x92\x75\xa0\xc7\xd0\x9e\xd2\x1e\xf6\x12\xca\x6e\xa1\x67\xef\x44\x76\x07\xdb\x23\x23\x6b\xd6\x09\x21\xdf\xbd\xf8\x0f\xdd\x04\x72\x32\x96\xf4\x7b\xef\xcd\xeb\x4b\xdf\x94\x35\x53\x25\xf2\x5e\x2a\x62\xe8\x7a\x51\x23\x87\x90\x59\xe8\x38\x43\x84\xac\x0e\xf6\x37\xbd\x17\x5e\xba\x6d\x5b\x46\xcf\xfa\xdc\x04\xdb\xa6\x91\xb7\x1f\x5f\xb3\xfb\xfd\x10\x34\xf5\x03\xc7\x6d\x2b\xb5\xa6\x21\xc3\x1c\xd1\xce\x3d\xd3\x1f\xd1\x86\x95\x06\xd3\xe4\x8d\x2e\x08\xb1\xec\x98\x88\xd2\xc8\xc5\xb2\x3b\x94\x1d\x23\xb4\x52\xd7\xac\xf4\xb4\xf0\xc5\xcf\x68\x7a\xc6\x2b\x62\x95\xa2\xa7\x03\x8f\xcb\xad\x9b\xe9\x7b\x76\x43\x8f\xd8\x9c\x9e\x56\xeb\x0b\x82\xb2\x25\x8d\xf4\x65\x99\x5c\x10\xe6\x14\x3b\x22\x9a\xbe\x1b\x84\xd5\x7e\xb7\x4a\x6d\x10\xae\xff\xcd\xdd\x71\x7d\x44\x4e\x2f\x31\x98\xcb\x89\x55\xe5\x56\x37\x86\xf6\xd1\xf5\x6b\x8a\x6e\xdc\xdb\x69\xce\xbb\x97\x68\x7c\xb2\x1b\xd8\x82\x9f\xe2\xed\xbe\xd3\x54\x78\x71\xe0\xf1\xf7\x3c\x71\xf3\xef\x1b\x7b\x89\xc7\x1c\x11\xaa\xe5\x1c\x06\x6e\x79\xa9\x10\x7c\x39\x30\x7d\x7b\x5e\x14\x8a\xfd\x0e\x01\xe0\x58\x2c\xd9\x8b\x97\x58\x89\xcb\x7e\xb1\x56\xa2\x1d\x75\x67\xb2\x72\x68\xb2\xfc\x13\x9b\x32\x15\x3f\x24\xb2\xcb\x67\x72\x95\x79\x33\xe9\x5d\xfe\x40\xea\x95\x3d\x87\x0f\x26\x3e\x05\x23\x2f\x47\xde\xd0\x60\xd2\xd3\x28\xda\x84\x58\xcf\xd2\xb7\x55\x00\x5c\xa7\xfe\xf0\x8a\xff\x02\x00\x00\xff\xff\xc2\xf2\xd5\x7e\x65\x02\x00\x00"

func workersFoobarMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_workersFoobarMainGoTpl,
		"workers/foobar/main.go.tpl",
	)
}

func workersFoobarMainGoTpl() (*asset, error) {
	bytes, err := workersFoobarMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workers/foobar/main.go.tpl", size: 613, mode: os.FileMode(420), modTime: time.Unix(1592394618, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/db_migrate.go.tpl":                cmdDb_migrateGoTpl,
	"cmd/main.go.tpl":                      cmdMainGoTpl,
	"cmd/serve.go.tpl":                     cmdServeGoTpl,
	"config/cfg.go.tpl":                    configCfgGoTpl,
	"config/workers.go.tpl":                configWorkersGoTpl,
	"dbschema/main.go.tpl":                 dbschemaMainGoTpl,
	"info/main.go.tpl":                     infoMainGoTpl,
	"initialization/init-functions.go.tpl": initializationInitFunctionsGoTpl,
	"initialization/main.go.tpl":           initializationMainGoTpl,
	"main.go.tpl":                          mainGoTpl,
	"models/query.go.tpl":                  modelsQueryGoTpl,
	"version.go.tpl":                       versionGoTpl,
	"workers/api/main.go.tpl":              workersApiMainGoTpl,
	"workers/chief.go.tpl":                 workersChiefGoTpl,
	"workers/foobar/main.go.tpl":           workersFoobarMainGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"db_migrate.go.tpl": &bintree{cmdDb_migrateGoTpl, map[string]*bintree{}},
		"main.go.tpl":       &bintree{cmdMainGoTpl, map[string]*bintree{}},
		"serve.go.tpl":      &bintree{cmdServeGoTpl, map[string]*bintree{}},
	}},
	"config": &bintree{nil, map[string]*bintree{
		"cfg.go.tpl":     &bintree{configCfgGoTpl, map[string]*bintree{}},
		"workers.go.tpl": &bintree{configWorkersGoTpl, map[string]*bintree{}},
	}},
	"dbschema": &bintree{nil, map[string]*bintree{
		"main.go.tpl": &bintree{dbschemaMainGoTpl, map[string]*bintree{}},
	}},
	"info": &bintree{nil, map[string]*bintree{
		"main.go.tpl": &bintree{infoMainGoTpl, map[string]*bintree{}},
	}},
	"initialization": &bintree{nil, map[string]*bintree{
		"init-functions.go.tpl": &bintree{initializationInitFunctionsGoTpl, map[string]*bintree{}},
		"main.go.tpl":           &bintree{initializationMainGoTpl, map[string]*bintree{}},
	}},
	"main.go.tpl": &bintree{mainGoTpl, map[string]*bintree{}},
	"models": &bintree{nil, map[string]*bintree{
		"query.go.tpl": &bintree{modelsQueryGoTpl, map[string]*bintree{}},
	}},
	"version.go.tpl": &bintree{versionGoTpl, map[string]*bintree{}},
	"workers": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"main.go.tpl": &bintree{workersApiMainGoTpl, map[string]*bintree{}},
		}},
		"chief.go.tpl": &bintree{workersChiefGoTpl, map[string]*bintree{}},
		"foobar": &bintree{nil, map[string]*bintree{
			"main.go.tpl": &bintree{workersFoobarMainGoTpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
